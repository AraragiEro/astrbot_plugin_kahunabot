<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>资产分析</title>
    <script src="https://cdn.jsdmirror.com/npm/@tailwindcss/browser@4"></script>
    <script src="https://cdn.jsdmirror.com/npm/chart.js"></script>
    <script src="https://cdn.jsdmirror.com/npm/chartjs-adapter-date-fns"></script>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script src="https://unpkg.com/d3-sankey@0.12.3/dist/d3-sankey.min.js"></script>
    <script src="https://cdn.jsdmirror.com/npm/luxon@3.3.0/build/global/luxon.min.js"></script>
    <script src="https://cdn.jsdmirror.com/npm/chartjs-adapter-luxon@1.3.1/dist/chartjs-adapter-luxon.min.js"></script>
    <style type="text/tailwindcss">
        @layer utilities {
            .content-auto {
                content-visibility: auto;
            }
            .shadow-text {
                text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.8);
            }
            .progress-bar {
                height: 8px;
                border-radius: 4px;
                overflow: hidden;
                position: relative;
                display: block;
                width: 100%;
                background-color: #e5e7eb;
            }
            .bg-green-500 {
                background-color: #10b981;
                display: block;
                height: 100%;
            }
            .bg-yellow-500 {
                background-color: #f59e0b;
                display: block;
                height: 100%;
            }
            .bg-red-500 {
                background-color: #ef4444;
                display: block;
                height: 100%;
            }
            .bg-gradient-to-r {
                background-image: linear-gradient(to right, var(--tw-gradient-stops));
            }
            .from-green-500 {
                --tw-gradient-from: #10b981 var(--tw-gradient-from-position);
                --tw-gradient-to: rgb(16 185 129 / 0) var(--tw-gradient-to-position);
                --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
            }
            .to-red-500 {
                --tw-gradient-to: #ef4444 var(--tw-gradient-to-position);
            }
            .price-indicator {
                position: relative;
                height: 8px;
                border-radius: 4px;
                overflow: hidden;
                background-color: #e5e7eb;
            }
            /* 价格指示器样式 */
            .price-marker {
                position: absolute;
                width: 3px;
                height: 12px;
                background-color: #000;
                top: -2px;
                z-index: 3;
                border-radius: 1px;
            }
        }
    </style>
</head>
<body class="bg-gray-100 p-4">
    <div class="container mx-auto max-w-7xl">
{#        <!-- 标题区域 -->#}
{#        <div class="bg-white p-6 rounded-lg shadow-md mb-8">#}
{#            <h1 class="text-2xl font-bold text-center">订单状态</h1>#}
{#            <p class="text-center text-gray-600">当前订单列表及状态</p>#}
{#        </div>#}
        <div class="relative h-[150px] mb-8 rounded-lg overflow-hidden">
            <!-- 背景图片 -->
            <img src="data:image/png;base64,{{ header_image }}" alt="背景" class="absolute inset-0 w-full h-full object-cover">
            <!-- 标题内容 -->
            <div class="absolute inset-0 flex justify-between items-center px-8">
                <h1 class="text-3xl font-bold text-white shadow-text"> {{ header_title }} </h1>
            </div>
        </div>

        <!-- 订单列表 -->
        <div class="space-y-4">
            {% for item in order_data %}
            {% if item.price <= item.min_price %}
                <div class="bg-white rounded-lg shadow-md p-4 hover:shadow-lg transition-shadow duration-200">
            {% else %}
                <div class="bg-red-200 rounded-lg shadow-md p-4 hover:shadow-lg transition-shadow duration-200">
            {% endif %}
                <div class="flex flex-auto md:flex-row md:items-center justify-between">
                    <!-- 商品信息 -->
                    <div class="flex items-center space-x-4 mb-4 md:mb-0 md:flex-grow-0 md:flex-shrink-0 md:min-w-[200px] md:max-w-[340px]">
                        {% if item.icon %}
                        <img src="data:image/png;base64,{{ item.icon }}" alt="{{ item.name }}" class="w-12 h-12 object-contain rounded-tr-lg rounded-br-lg rounded-bl-lg flex-shrink-0">
                        {% else %}
                        <div class="w-12 h-12 bg-gray-200 rounded-md flex items-center justify-center flex-shrink-0">
                            <span class="text-gray-500 text-xs">无图</span>
                        </div>
                        {% endif %}
                        <div class="min-w-0">
                            <h3 class="font-semibold truncate">{{ item.name }}</h3>
                            <p class="text-sm text-gray-600">ID: {{ item.type_id }}</p>
                            <p class="text-sm text-gray-600 truncate">{{ item.structure_name }}</p>
                        </div>
                    </div>

                    <!-- 数量和价格信息 -->
                    <div class="flex flex-col mb-4 md:mb-0 md:flex-shrink-0 md:flex-grow-0 md:w-auto md:mx-4">
                        <div class="flex justify-between mb-2 whitespace-nowrap">
                            <span class="text-sm text-gray-600 mr-2">数量:</span>
                            <span class="font-medium">{{ item.volume_remain }}/{{ item.volume_total }}</span>
                        </div>
                        <div class="flex justify-between mb-2 whitespace-nowrap">
                            <span class="text-sm text-gray-600 mr-2">价格:</span>
                            <span class="font-medium">{{ '{:,.2f}'.format(item.price) }} ISK</span>
                        </div>
                        <div class="flex justify-between whitespace-nowrap">
                            <span class="text-sm text-gray-600 mr-2">最低价:</span>
                            <span class="font-medium">{{ '{:,.2f}'.format(item.min_price) }} ISK</span>
                        </div>
                    </div>

                    <!-- 进度条和状态 -->
                    <div class="md:flex-grow md:flex-shrink">
                    <!-- 出售进度条 -->
                        <div class="mb-1">
                            <div class="flex justify-between text-xs text-gray-600 mb-1">
                                <span>剩余数量: {{ item.volume_remain }}</span>
                                <span>上架数量: {{ item.volume_total }}</span>
                            </div>
                            <div class="price-indicator bg-gray-200 relative">
                                <div class="h-full bg-green-500" style="width: {{ (item.volume_total - item.volume_remain) / item.volume_total * 100 }}%; position: relative; z-index: 1;"></div>
                            </div>
                        </div>

                        <!-- 时间进度条 -->
                        <div class="mb-1">
                            <div class="flex justify-between text-xs text-gray-600 mb-1">
                                <span>上架时间: {{ item.issued.strftime('%Y-%m-%d') }}</span>
                                <span>剩余有效期: {{ item.date_remain }}天</span>
                            </div>
                            <div class="progress-bar bg-gray-200">
                                <!-- 使用JavaScript计算进度 -->
                                <div class="js-progress-bar" 
                                     data-issued="{{ item.issued.strftime('%Y-%m-%d') }}"
                                     data-duration="{{ item.duration }}"
                                     data-color-low="bg-green-500"
                                     data-color-medium="bg-yellow-500"
                                     data-color-high="bg-red-500">
                                </div>
                                <!-- 进度条内容将由JavaScript填充 -->
                            </div>
                        </div>

                        <!-- 价格比较 -->
                        <div>
                        {% if not is_buy_order %}
                            <div class="flex justify-between text-xs text-gray-600 mb-1">
                                <span>价格状态</span>
                                {% set price_diff_percent = ((item.price - item.min_price) / item.min_price) * 100 if item.min_price > 0 else 0 %}
                                {% if item.price <= item.min_price %}
                                    <span class="text-green-600 font-medium">全场最低 {{ '{:.2f}'.format(price_diff_percent * -1) }}%</span>
                                {% else %}
                                    <span class="text-red-600 font-medium">被压了！ {{ '{:.2f}'.format(price_diff_percent) }}%</span>
                                {% endif %}
                            </div>
                            <div class="price-indicator bg-gray-200 relative">
                                {% set max_display = item.min_price * 1.2 %}
                                {% set min_display = item.min_price * 0.8 %}
                                {% set width_percent = ((item.price - min_display) / (max_display - min_display)) * 100%}
                                {% set width_percent = 100 if width_percent > 100 else width_percent %}
                                {% set width_percent = 0 if width_percent < 0 else width_percent %}
                                <div class="h-full bg-green-500" style="width: {{ width_percent }}%; position: relative; z-index: 1;"></div>
                                <!-- 最低价指示器 -->
                                <div class="price-marker" style="background-color: #000000; left: 50%;"></div>
                                <!-- 当前价指示器 -->
                                <div class="price-marker" style="left: {{ width_percent }}%; background-color: #ff0000;"></div>
                            </div>
                        {% else %}
                            <div class="flex justify-between text-xs text-gray-600 mb-1">
                                <span>价格状态</span>
                                {% set price_diff_percent = ((item.max_price - item.price) / item.price) * 100 if item.price > 0 else 0 %}
                                {% if item.price >= item.max_price %}
                                    <span class="text-green-600 font-medium">全场最高 {{ '{:.2f}'.format(price_diff_percent * -1) }}%</span>
                                {% else %}
                                    <span class="text-red-600 font-medium">被压了！ {{ '{:.2f}'.format(price_diff_percent) }}%</span>
                                {% endif %}
                            </div>
                            <div class="price-indicator bg-gray-200 relative">
                                {% set max_display = item.max_price * 1.2 %}
                                {% set min_display = item.max_price * 0.8 %}
                                {% set width_percent = ((max_display - item.price) / (max_display - min_display)) * 100%}
                                {% set width_percent = 100 if width_percent > 100 else width_percent %}
                                {% set width_percent = 0 if width_percent < 0 else width_percent %}
                                <div class="h-full bg-green-500" style="width: {{ width_percent }}%; position: relative; z-index: 1;"></div>
                                <!-- 最高价指示器 -->
                                <div class="price-marker" style="background-color: #000000; left: 50%;"></div>
                                <!-- 当前价指示器 -->
                                <div class="price-marker" style="left: {{ width_percent }}%; background-color: #ff0000;"></div>
                            </div>
                        {% endif %}
                        </div>
                    </div>
                </div>
            </div>
            {% endfor %}
        </div>
    </div>
    <div class="text-center text-gray-950 text-sm mt-8 mb-4">
        <p>紫竹梅实验型工业核心mk.1 - EVE订单管理系统 - kahunaBot</p>
    </div>
    <script>
        // 获取当前时间用于计算进度条
        const now = luxon.DateTime.now();
        
        // 格式化数字为货币格式
        function formatCurrency(number) {
            return new Intl.NumberFormat('zh-CN').format(number);
        }
        
        // 初始化进度条
        // 初始化进度条
        document.addEventListener('DOMContentLoaded', function() {
            console.log("DOM加载完成，开始初始化进度条");
            console.log("当前时间:", now.toISO());

            // 处理所有进度条
            const progressBars = document.querySelectorAll('.js-progress-bar');
            console.log(`找到 ${progressBars.length} 个进度条元素`);

            progressBars.forEach(function(progressBar, index) {
                console.log(`--- 处理第 ${index + 1} 个进度条 ---`);

                // 获取数据
                const issuedDate = progressBar.getAttribute('data-issued');
                const duration = parseInt(progressBar.getAttribute('data-duration'));
                const colorLow = progressBar.getAttribute('data-color-low');
                const colorMedium = progressBar.getAttribute('data-color-medium');
                const colorHigh = progressBar.getAttribute('data-color-high');

                console.log("获取的属性值:", {
                    issuedDate,
                    duration,
                    colorLow,
                    colorMedium,
                    colorHigh
                });

                // 计算天数差异
                try {
                    const issued = luxon.DateTime.fromFormat(issuedDate, 'yyyy-MM-dd');
                    console.log("解析后的发布日期:", issued.toISO());

                    const daysPassed = now.diff(issued, 'days').days;
                    console.log("已经过去的天数:", daysPassed);

                    const percentage = Math.min(Math.max(0, (daysPassed / duration) * 100), 100);
                    console.log("计算的进度百分比:", percentage.toFixed(2) + "%");

                    // 确定颜色
                    let color = colorLow;
                    if (percentage >= 80) {
                        color = colorHigh;
                        console.log("进度高于80%，使用高进度颜色:", colorHigh);
                    } else if (percentage >= 50) {
                        color = colorMedium;
                        console.log("进度高于50%，使用中进度颜色:", colorMedium);
                    } else {
                        console.log("进度低于50%，使用低进度颜色:", colorLow);
                    }

                    // 创建进度条元素
                    const progressElement = document.createElement('div');
                    progressElement.className = color;
                    progressElement.style.width = `${percentage}%`;
                    progressElement.style.height = '8px';
                    progressElement.style.display = 'block';
                    progressElement.style.position = 'relative';
                    progressElement.style.background = color === 'bg-green-500' ? '#10b981' : color === 'bg-yellow-500' ? '#f59e0b' : '#ef4444';

                    console.log("创建进度条元素:", {
                        class: color,
                        width: `${percentage}%`,
                        height: '100%'
                    });

                    // 清空容器并添加新元素
                    progressBar.innerHTML = '';
                    progressBar.appendChild(progressElement);

                    // 确保进度条可见
                    progressBar.style.display = 'block';
                    console.log("进度条渲染完成");
                } catch (error) {
                    console.error("处理进度条时出错:", error);
                    console.error("错误详情:", {
                        message: error.message,
                        issuedDate,
                        duration
                    });
                }
            });

            console.log("所有进度条初始化完成");
        });
    </script>
</body>
</html>
