<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>价格信息</title>
    <script src="https://cdn.jsdmirror.com/npm/@tailwindcss/browser@4"></script>
    <script src="https://cdn.jsdmirror.com/npm/chart.js"></script>
    <script src="https://cdn.jsdmirror.com/npm/chartjs-adapter-date-fns"></script>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script src="https://unpkg.com/d3-sankey@0.12.3/dist/d3-sankey.min.js"></script>
    <style>
        .price-change-positive { color: #10B981; }
        .price-change-negative { color: #EF4444; }
        .chart-container { position: relative; height: 300px; }
        .material-card { transition: all 0.3s ease; }
        .material-card:hover { transform: translateY(-2px); box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); }
    </style>
</head>
<body class="bg-gray-100 min-h-screen">
    <div class="container w-[calc(100%-20px)] max-w-[1920px] mx-auto px-2 py-8">
        <!-- 标题区域 -->
        <div class="relative h-[250px] mb-8 rounded-lg overflow-hidden">
            <!-- 背景图片 -->
            <img src="data:image/png;base64,{{ header_image }}" alt="背景" class="absolute inset-0 w-full h-full object-cover">
            <!-- 标题内容 -->
            <div class="absolute inset-0 flex justify-between items-center px-8">
                <h1 class="text-3xl font-bold text-white shadow-text"> {{ header_title }} </h1>
            </div>
        </div>
        
        <!-- 市场指数趋势卡片 -->
        <div class="bg-white rounded-lg shadow-md mb-8 p-6 flex flex-col items-start">
            <div class="flex items-center mb-2">
                <span class="text-lg text-gray-500 mr-4">市场健康指数趋势</span>
            </div>
            <div class="w-full h-32">
                <canvas id="marketIndexChart"></canvas>
            </div>
        </div>
        
        {% for rarity in rarity_list %}
        <div class="mb-12">
            <h2 class="text-2xl font-semibold text-gray-700 mb-6">{{ rarity }} </h2>
            <div class="flex flex-col space-y-8">
                {% for type_id, material in data[rarity].items() %}
                <div class="material-card bg-white rounded-lg shadow-md w-full h-[500px] flex flex-col">
                    <!-- 信息区 -->
                    <div class="flex items-center justify-between px-8 h-[100px] border-b bg-white z-10">
                        <div>
                            <div class="text-xl font-bold">
                                <img src="data:image/png;base64,{{ material.icon }}" alt="icon" class="inline-block w-16 h-16 mr-3 rounded-md align-middle" />
                                {{ material.name }} <span class="ml-2 text-gray-400">{{ material.cn_name }}</span>
                            </div>
                            <div class="text-sm text-gray-500">{{ rarity }} </div>
                        </div>
                        <div class="flex space-x-8">
                            <div>
                                <div class="text-gray-500 text-xs">当前最低出售</div>
                                <div class="flex items-center">
                                    <span class="text-lg font-semibold text-blue-600 truncate">{{ material.sell_price }} ISK</span>
                                    {% set diff = ((material.sell_price - material.month_highset_aver) / material.month_highset_aver * 100) %}
                                    <span class="ml-2 text-xl font-bold {% if diff > 0 %}text-green-500{% elif diff < 0 %}text-red-500{% endif %}">
                                        {% if diff > 0 %}
                                            ↑{{ diff|round(2) }}%
                                        {% elif diff < 0 %}
                                            ↓{{ diff|round(2)|abs }}%
                                        {% else %}
                                            0%
                                        {% endif %}
                                    </span>
                                </div>
                            </div>
                            <div>
                                <div class="text-gray-500 text-xs">当前最高收购</div>
                                <div class="flex items-center">
                                    <span class="text-lg font-semibold text-green-600 truncate">{{ material.buy_price }} ISK</span>
                                    {% set diff = ((material.buy_price - material.month_lowest_aver) / material.month_lowest_aver * 100) %}
                                    <span class="ml-2 text-xl font-bold {% if diff > 0 %}text-green-500{% elif diff < 0 %}text-red-500{% endif %}">
                                        {% if diff > 0 %}
                                            ↑{{ diff|round(2) }}%
                                        {% elif diff < 0 %}
                                            ↓{{ diff|round(2)|abs }}%
                                        {% else %}
                                            0%
                                        {% endif %}
                                    </span>
                                </div>
                            </div>
{#                            <div class="w-32">#}
{#                                <div class="text-gray-500 text-xs">较月均最高</div>#}
{#                                <div class="text-lg font-semibold {% if material.sell_price > material.month_highset_aver %}text-green-500{% else %}text-red-500{% endif %}">#}
{#                                    {{ ((material.sell_price - material.month_highset_aver) / material.month_highset_aver * 100) | round(2) }}%#}
{#                                </div>#}
{#                            </div>#}
{#                            <div class="w-32">#}
{#                                <div class="text-gray-500 text-xs">较月均最低</div>#}
{#                                <div class="text-lg font-semibold {% if material.buy_price > material.month_lowest_aver %}text-green-500{% else %}text-red-500{% endif %}">#}
{#                                    {{ ((material.buy_price - material.month_lowest_aver) / material.month_lowest_aver * 100) | round(2) }}%#}
{#                                </div>#}
{#                            </div>#}
                        </div>
                    </div>
                    <!-- 图表区 -->
                    <div class="h-[400px] p-8 bg-white">
                        <canvas id="mixChart_{{ type_id }}" class="w-full h-full"></canvas>
                    </div>
                </div>
                {% endfor %}
            </div>
        </div>
        {% endfor %}
    </div>
    <!-- 移动到最外层的页脚 -->
    <div class="text-center text-gray-500 text-sm mt-4">
        <p>紫竹梅实验型工业核心mk.1 - 元素监视 - kahunaBot</p>
    </div>

    <script>
        function formatDate(date) {
            return new Date(date).toLocaleDateString();
        }

        function createMixChart(canvasId, data) {
            const dates = Object.keys(data.two_month_history).sort();
            const avgPrices = dates.map(d => data.two_month_history[d].average_price);
            const highPrices = dates.map(d => data.two_month_history[d].highest_price);
            const lowPrices = dates.map(d => data.two_month_history[d].lowest_price);
            const volumes = dates.map(d => data.two_month_history[d].volume);

            new Chart(document.getElementById(canvasId).getContext('2d'), {
                data: {
                    labels: dates.map(d => formatDate(d)),
                    datasets: [
                        {
                            type: 'line',
                            label: '平均价格',
                            data: avgPrices,
                            borderColor: 'rgb(59, 130, 246)',
                            backgroundColor: 'rgba(59, 130, 246, 0.1)',
                            yAxisID: 'y',
                            fill: true,
                            tension: 0.3
                        },
                        {
                            type: 'line',
                            label: '最高价格',
                            data: highPrices,
                            borderColor: 'rgb(16, 185, 129)',
                            borderDash: [5, 5],
                            yAxisID: 'y',
                            fill: false,
                            tension: 0.3
                        },
                        {
                            type: 'line',
                            label: '最低价格',
                            data: lowPrices,
                            borderColor: 'rgb(239, 68, 68)',
                            borderDash: [5, 5],
                            yAxisID: 'y',
                            fill: false,
                            tension: 0.3
                        },
                        {
                            type: 'bar',
                            label: '成交量',
                            data: volumes,
                            backgroundColor: 'rgba(99, 102, 241, 0.3)',
                            borderColor: 'rgb(99, 102, 241)',
                            yAxisID: 'y1'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: { legend: { position: 'top' } },
                    scales: {
                        y: { type: 'linear', position: 'left', title: { display: true, text: '价格' } },
                        y1: { type: 'linear', position: 'right', title: { display: true, text: '成交量' }, grid: { drawOnChartArea: false } }
                    }
                }
            });
        }

        // 初始化所有混合图表
        {% for rarity in rarity_list %}
            {% for type_id, material in data[rarity].items() %}
                createMixChart('mixChart_{{ type_id }}', {{ material|tojson }});
            {% endfor %}
        {% endfor %}

        // 市场指数趋势图
        const marketIndexLabels = Object.keys({{ market_index_history|tojson }});
        const marketIndexData = Object.values({{ market_index_history|tojson }});
        const avg = marketIndexData.reduce((a, b) => a + b, 0) / marketIndexData.length;
        new Chart(document.getElementById('marketIndexChart').getContext('2d'), {
            type: 'line',
            data: {
                labels: marketIndexLabels,
                datasets: [
                    {
                        label: '市场指数',
                        data: marketIndexData,
                        borderColor: 'rgb(59, 130, 246)',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        fill: true,
                        tension: 0.3,
                        pointRadius: function(context) {
                            return context.dataIndex === marketIndexData.length - 1 ? 6 : 2;
                        },
                        pointBackgroundColor: function(context) {
                            return context.dataIndex === marketIndexData.length - 1 ? 'rgb(16, 185, 129)' : 'rgb(59, 130, 246)';
                        }
                    },
                    {
                        label: '均值',
                        data: Array(marketIndexData.length).fill(avg),
                        borderColor: 'rgba(239, 68, 68, 0.7)',
                        borderDash: [8, 4],
                        pointRadius: 0,
                        fill: false,
                        type: 'line'
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                if (context.dataset.label === '均值') {
                                    return '均值: ' + avg.toFixed(2);
                                }
                                return '指数: ' + context.parsed.y;
                            }
                        }
                    }
                },
                scales: {
                    x: { display: false },
                    y: { display: false }
                }
            }
        });
    </script>
</body>
</html>