<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>资产分析</title>
    <script src="https://cdn.jsdmirror.com/npm/@tailwindcss/browser@4"></script>
    <script src="https://cdn.jsdmirror.com/npm/chart.js"></script>
    <script src="https://cdn.jsdmirror.com/npm/chartjs-adapter-date-fns"></script>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script src="https://unpkg.com/d3-sankey@0.12.3/dist/d3-sankey.min.js"></script>
    <script src="https://cdn.jsdmirror.com/npm/luxon@3.3.0/build/global/luxon.min.js"></script>
    <script src="https://cdn.jsdmirror.com/npm/chartjs-adapter-luxon@1.3.1/dist/chartjs-adapter-luxon.min.js"></script>
    <style>
        .asset-card {
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }
        .asset-card:hover {
            transform: translateY(-5px);
        }
        .change-up {
            color: #10b981;
        }
        .change-down {
            color: #ef4444;
        }
        .change-neutral {
            color: #6b7280;
        }
        .chart-container {
            position: relative;
            height: 300px;
            margin-bottom: 1rem;
        }
        .trend-chart-container {
            height: 500px;
        }
    </style>
</head>
<body class="bg-gray-100 min-h-screen">
    <div class="w-[calc(100%-20px)] max-w-[1920px] mx-auto px-2 py-8">
        <!-- 标题区域 -->
        <div class="relative h-[250px] mb-8 rounded-lg overflow-hidden">
            <!-- 背景图片 -->
            <img src="data:image/png;base64,{{ header_image }}" alt="背景" class="absolute inset-0 w-full h-full object-cover">
            <!-- 标题内容 -->
            <div class="absolute inset-0 flex justify-between items-center px-8">
                <h1 class="text-3xl font-bold text-white shadow-text"> {{ header_title }} </h1>
            </div>
        </div>

        <!-- 总资产卡片 -->
        <div class="bg-white p-6 rounded-lg shadow-md mb-8">
            <div class="flex items-center justify-between mb-4">
                <h2 class="text-2xl font-semibold">总资产</h2>
                <div>
                    <span id="totalAsset" class="text-2xl font-bold"></span>
                    <span id="totalChange" class="ml-2 text-sm font-medium"></span>
                </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div class="bg-blue-50 p-4 rounded-lg">
                    <h3 class="text-lg font-medium text-blue-800">资产估值总计</h3>
                    <div class="flex justify-between items-center mt-2">
                        <span id="classifyTotal" class="text-xl font-bold"></span>
                        <span id="classifyTotalChange" class="text-sm"></span>
                    </div>
                </div>
                <div class="bg-purple-50 p-4 rounded-lg">
                    <h3 class="text-lg font-medium text-purple-800">钱包余额</h3>
                    <div class="flex justify-between items-center mt-2">
                        <span id="walletBalance" class="text-xl font-bold"></span>
                        <span id="walletChange" class="text-sm"></span>
                    </div>
                </div>
            </div>
        </div>

        <!-- 分类资产和建筑资产图表 -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
            <!-- 分类资产饼图 -->
            <div class="bg-white p-6 rounded-lg shadow-md">
                <h2 class="text-xl font-semibold mb-4">分类资产比例</h2>
                <div class="chart-container">
                    <canvas id="classifyChart"></canvas>
                </div>
                <div id="classifyDetails" class="mt-4 space-y-2"></div>
            </div>

            <!-- 建筑资产饼图 -->
            <div class="bg-white p-6 rounded-lg shadow-md">
                <h2 class="text-xl font-semibold mb-4">建筑资产比例</h2>
                <div class="chart-container">
                    <canvas id="structureChart"></canvas>
                </div>
                <div id="structureDetails" class="mt-4 space-y-2"></div>
            </div>
        </div>

        <!-- 历史趋势图表 -->
        <div class="bg-white p-6 rounded-lg shadow-md mb-8">
            <h2 class="text-xl font-semibold mb-4">总资产历史趋势</h2>
            <div class="chart-container trend-chart-container">
                <canvas id="totalTrendChart"></canvas>
            </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
            <!-- 分类资产历史趋势 -->
            <div class="bg-white p-6 rounded-lg shadow-md">
                <h2 class="text-xl font-semibold mb-4">分类资产历史趋势</h2>
                <div class="chart-container trend-chart-container">
                    <canvas id="classifyTrendChart"></canvas>
                </div>
            </div>

            <!-- 建筑资产历史趋势 -->
            <div class="bg-white p-6 rounded-lg shadow-md">
                <h2 class="text-xl font-semibold mb-4">建筑资产历史趋势</h2>
                <div class="chart-container trend-chart-containers">
                    <canvas id="structureTrendChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <script>
        // 数据处理
        const data = {{ data|tojson }};
        console.log('原始数据:', data);
        const today = data.today;
        const history = data.history;
        
        // 格式化数字为带千分位的字符串
        function formatNumber(num) {
            return num.toLocaleString('zh-CN', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        }
        
        // 获取昨天的数据
        function getYesterdayData() {
            const dates = Object.keys(history).sort();
            if (dates.length < 2) return null;
            const yesterdayKey = dates[dates.length - 2];
            // 返回正确的数据结构
            return history[yesterdayKey].data;
        }
        
        // 计算变化百分比
        function calculateChange(current, previous) {
            if (!previous) return { value: 0, percent: 0 };
            const change = current - previous;
            const percent = previous !== 0 ? (change / previous) * 100 : 0;
            return { value: change, percent: percent };
        }
        
        // 展示变化
        function displayChange(change) {
            const { value, percent } = change;
            const sign = value > 0 ? '+' : '';
            const className = value > 0 ? 'change-up' : (value < 0 ? 'change-down' : 'change-neutral');
            return `<span class="${className}">${sign}${formatNumber(value)} (${sign}${percent.toFixed(2)}%)</span>`;
        }
        
        // 加载总资产信息
        function loadTotalAssets() {
            const yesterdayData = getYesterdayData();
            console.log('昨天的数据:', yesterdayData);
            
            const yesterdayTotal = yesterdayData ? yesterdayData.total : 0;
            const totalChange = calculateChange(today.total, yesterdayTotal);
            
            document.getElementById('totalAsset').textContent = formatNumber(today.total);
            document.getElementById('totalChange').innerHTML = displayChange(totalChange);
            
            // 分类资产总计
            const classifyTotal = Object.values(today.classify_asset).reduce((a, b) => a + b, 0);
            const yesterdayClassifyTotal = yesterdayData ? 
                Object.values(yesterdayData.classify_asset).reduce((a, b) => a + b, 0) : 0;
            const classifyChange = calculateChange(classifyTotal, yesterdayClassifyTotal);
            
            document.getElementById('classifyTotal').textContent = formatNumber(classifyTotal);
            document.getElementById('classifyTotalChange').innerHTML = displayChange(classifyChange);
            
            // 建筑资产总计
            const structureTotal = Object.values(today.structure_asset).reduce((a, b) => a + b, 0);
            const yesterdayStructureTotal = yesterdayData ? 
                Object.values(yesterdayData.structure_asset).reduce((a, b) => a + b, 0) : 0;
            const structureChange = calculateChange(structureTotal, yesterdayStructureTotal);
            
            // 注意：这里不再尝试更新不存在的DOM元素
            console.log('建筑资产总计:', formatNumber(structureTotal));
            console.log('建筑资产变化:', displayChange(structureChange));
            
            // 钱包余额
            const walletChange = calculateChange(today.wallet, yesterdayData ? yesterdayData.wallet : 0);
            
            document.getElementById('walletBalance').textContent = formatNumber(today.wallet);
            document.getElementById('walletChange').innerHTML = displayChange(walletChange);
        }
        
        // 创建分类资产饼图
        function createClassifyChart() {
            const classifyData = today.classify_asset;
            const labels = Object.keys(classifyData);
            const values = Object.values(classifyData);
            
            const ctx = document.getElementById('classifyChart').getContext('2d');
            const classifyChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        data: values,
                        backgroundColor: [
                            '#4B5563', // 矿石
                            '#F59E0B', // 燃料块
                            '#10B981', // 元素
                            '#3B82F6', // 气云
                            '#8B5CF6', // 行星工业
                            '#EC4899', // 产品
                            '#6B7280'  // 杂货
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const label = context.label || '';
                                    const value = context.raw;
                                    const percentage = ((value / values.reduce((a, b) => a + b, 0)) * 100).toFixed(2);
                                    return `${label}: ${formatNumber(value)} (${percentage}%)`;
                                }
                            }
                        }
                    }
                }
            });
            
            // 更新详细信息列表
            const yesterdayData = getYesterdayData();
            const detailsContainer = document.getElementById('classifyDetails');
            
            labels.forEach((label, index) => {
                const value = values[index];
                const yesterdayValue = yesterdayData ? yesterdayData.classify_asset[label] || 0 : 0;
                const change = calculateChange(value, yesterdayValue);
                
                const detailItem = document.createElement('div');
                detailItem.className = 'flex justify-between items-center p-2 border-b';
                const totalValue = values.reduce((a, b) => a + b, 0);
                const percentage = ((value / totalValue) * 100).toFixed(2);
                detailItem.innerHTML = `
                    <span class="font-medium">${label}</span>
                    <div class="text-right">
                        <div class="font-semibold">${formatNumber(value)} <span class="text-gray-500 text-sm">(${percentage}%)</span></div>
                        <div class="text-xs">${displayChange(change)}</div>
                    </div>
                `;
                
                detailsContainer.appendChild(detailItem);
            });
        }
        
        // 创建建筑资产饼图
        function createStructureChart() {
            const structureData = today.structure_asset;
            const ids = Object.keys(structureData);
            const values = Object.values(structureData);
            
            const ctx = document.getElementById('structureChart').getContext('2d');
            const structureChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ids.map(id => `${id}`),
                    datasets: [{
                        data: values,
                        backgroundColor: [
                            '#F87171', '#34D399', '#60A5FA', '#A78BFA', 
                            '#F472B6', '#FBBF24', '#A1A1AA', '#2DD4BF'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const label = context.label || '';
                                    const value = context.raw;
                                    const percentage = ((value / values.reduce((a, b) => a + b, 0)) * 100).toFixed(2);
                                    return `${label}: ${formatNumber(value)} (${percentage}%)`;
                                }
                            }
                        }
                    }
                }
            });
            
            // 更新详细信息列表
            const yesterdayData = getYesterdayData();
            const detailsContainer = document.getElementById('structureDetails');
            
            ids.forEach((id, index) => {
                const value = values[index];
                const yesterdayValue = yesterdayData ? (yesterdayData.structure_asset[id] || 0) : 0;
                const change = calculateChange(value, yesterdayValue);
                
                const detailItem = document.createElement('div');
                detailItem.className = 'flex justify-between items-center p-2 border-b';
                const totalValue = values.reduce((a, b) => a + b, 0);
                const percentage = ((value / totalValue) * 100).toFixed(2);
                detailItem.innerHTML = `
                    <span class="font-medium">${id}</span>
                    <div class="text-right">
                        <div class="font-semibold">${formatNumber(value)} <span class="text-gray-500 text-sm">(${percentage}%)</span></div>
                        <div class="text-xs">${displayChange(change)}</div>
                    </div>
                `;
                
                detailsContainer.appendChild(detailItem);
            });
        }
        
        // 准备历史趋势数据
        function prepareHistoryData() {
            // 按日期排序
            const sortedDates = Object.keys(history).sort();
            console.log('排序后的日期:', sortedDates);
            
            if (sortedDates.length === 0) {
                console.error('没有历史数据');
                return { totalTrend: [], classifyTrend: {}, structureTrend: {} };
            }
            
            // 检查数据结构
            console.log('第一个历史数据样本:', history[sortedDates[0]]);
            
            // 总资产趋势
            const totalTrend = [];
            // 分类资产趋势
            const classifyTypes = Object.keys(today.classify_asset);
            const classifyTrend = {};
            classifyTypes.forEach(type => { classifyTrend[type] = []; });
            
            // 建筑资产趋势
            const structureIds = Object.keys(today.structure_asset);
            const structureTrend = {};
            structureIds.forEach(id => { structureTrend[id] = []; });
            
            // 处理每个日期的数据
            sortedDates.forEach(date => {
                try {
                    const dateObj = new Date(date);
                    const dateData = history[date].data;
                    
                    // 总资产
                    totalTrend.push({
                        x: dateObj,
                        y: dateData.total
                    });
                    
                    // 分类资产
                    classifyTypes.forEach(type => {
                        const value = dateData.classify_asset[type] || 0;
                        classifyTrend[type].push({
                            x: dateObj,
                            y: value
                        });
                    });
                    
                    // 建筑资产
                    structureIds.forEach(id => {
                        const value = dateData.structure_asset[id] || 0;
                        structureTrend[id].push({
                            x: dateObj,
                            y: value
                        });
                    });
                } catch (error) {
                    console.error(`处理日期 ${date} 的数据时出错:`, error);
                }
            });
            
            return { totalTrend, classifyTrend, structureTrend };
        }
        
        // 创建总资产趋势图
        function createTotalTrendChart(totalTrend) {
            const ctx = document.getElementById('totalTrendChart').getContext('2d');
            
            const totalTrendChart = new Chart(ctx, {
                type: 'line',
                data: {
                    datasets: [{
                        label: '总资产',
                        data: totalTrend,
                        borderColor: '#3B82F6',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        borderWidth: 2,
                        fill: true,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            type: 'time',
                            time: {
                                unit: 'day',
                                displayFormats: {
                                    day: 'yyyy-MM-dd'
                                }
                            },
                            title: {
                                display: true,
                                text: '日期'
                            }
                        },
                        y: {
                            beginAtZero: false,
                            title: {
                                display: true,
                                text: '资产价值'
                            },
                            ticks: {
                                callback: function(value) {
                                    if (value >= 1e9) return (value / 1e9).toFixed(1) + 'B';
                                    if (value >= 1e6) return (value / 1e6).toFixed(1) + 'M';
                                    if (value >= 1e3) return (value / 1e3).toFixed(1) + 'K';
                                    return value;
                                }
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return `总资产: ${formatNumber(context.raw.y)}`;
                                }
                            }
                        }
                    }
                }
            });
        }
        
        // 创建分类资产趋势图
        function createClassifyTrendChart(classifyTrend) {
            const ctx = document.getElementById('classifyTrendChart').getContext('2d');
            const colors = ['#4B5563', '#F59E0B', '#10B981', '#3B82F6', '#8B5CF6', '#EC4899', '#6B7280'];
            
            const datasets = Object.keys(classifyTrend).map((type, index) => ({
                label: type,
                data: classifyTrend[type],
                borderColor: colors[index % colors.length],
                backgroundColor: 'transparent',
                borderWidth: 2
            }));
            
            const classifyTrendChart = new Chart(ctx, {
                type: 'line',
                data: { datasets },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            type: 'time',
                            time: {
                                unit: 'day',
                                displayFormats: {
                                    day: 'yyyy-MM-dd'
                                }
                            },
                            title: {
                                display: true,
                                text: '日期'
                            }
                        },
                        y: {
                            beginAtZero: false,
                            title: {
                                display: true,
                                text: '资产价值'
                            },
                            ticks: {
                                callback: function(value) {
                                    if (value >= 1e9) return (value / 1e9).toFixed(1) + 'B';
                                    if (value >= 1e6) return (value / 1e6).toFixed(1) + 'M';
                                    if (value >= 1e3) return (value / 1e3).toFixed(1) + 'K';
                                    return value;
                                }
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return `${context.dataset.label}: ${formatNumber(context.raw.y)}`;
                                }
                            }
                        }
                    }
                }
            });
        }
        
        // 创建建筑资产趋势图
        function createStructureTrendChart(structureTrend) {
            const ctx = document.getElementById('structureTrendChart').getContext('2d');
            const colors = ['#F87171', '#34D399', '#60A5FA', '#A78BFA', '#F472B6', '#FBBF24', '#A1A1AA', '#2DD4BF'];
            
            const datasets = Object.keys(structureTrend).map((id, index) => ({
                label: `${id}`,
                data: structureTrend[id],
                borderColor: colors[index % colors.length],
                backgroundColor: 'transparent',
                borderWidth: 2
            }));
            
            const structureTrendChart = new Chart(ctx, {
                type: 'line',
                data: { datasets },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            type: 'time',
                            time: {
                                unit: 'day',
                                displayFormats: {
                                    day: 'yyyy-MM-dd'
                                }
                            },
                            title: {
                                display: true,
                                text: '日期'
                            }
                        },
                        y: {
                            beginAtZero: false,
                            title: {
                                display: true,
                                text: '资产价值'
                            },
                            ticks: {
                                callback: function(value) {
                                    if (value >= 1e9) return (value / 1e9).toFixed(1) + 'B';
                                    if (value >= 1e6) return (value / 1e6).toFixed(1) + 'M';
                                    if (value >= 1e3) return (value / 1e3).toFixed(1) + 'K';
                                    return value;
                                }
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return `${context.dataset.label}: ${formatNumber(context.raw.y)}`;
                                }
                            }
                        }
                    }
                }
            });
        }
        
        // 初始化页面
        function initPage() {
            console.log('初始化页面...');
            console.log('数据:', data);
            
            // 验证今日数据
            if (!today) {
                console.error('今日数据不存在');
                document.body.innerHTML = '<div class="p-8 text-center"><h1 class="text-2xl text-red-600">数据加载错误</h1><p>无法获取今日资产数据</p></div>';
                return;
            }
            console.log('今日数据:', today);
            console.log('历史数据:', history);
            
            try {
                // 加载总资产信息
                try {
                    loadTotalAssets();
                    console.log('总资产信息加载完成');
                } catch (error) {
                    console.error('加载总资产信息时出错:', error);
                }
                
                // 创建分类资产饼图
                if (today.classify_asset && Object.keys(today.classify_asset).length > 0) {
                    try {
                        createClassifyChart();
                        console.log('分类资产图表创建完成');
                    } catch (error) {
                        console.error('创建分类资产图表时出错:', error);
                        document.getElementById('classifyChart').parentNode.innerHTML = '<div class="p-4 text-center text-gray-500">无法创建分类资产图表</div>';
                    }
                } else {
                    console.warn('没有分类资产数据');
                    document.getElementById('classifyChart').parentNode.innerHTML = '<div class="p-4 text-center text-gray-500">没有分类资产数据</div>';
                }
                
                // 创建建筑资产饼图
                if (today.structure_asset && Object.keys(today.structure_asset).length > 0) {
                    try {
                        createStructureChart();
                        console.log('建筑资产图表创建完成');
                    } catch (error) {
                        console.error('创建建筑资产图表时出错:', error);
                        document.getElementById('structureChart').parentNode.innerHTML = '<div class="p-4 text-center text-gray-500">无法创建建筑资产图表</div>';
                    }
                } else {
                    console.warn('没有建筑资产数据');
                    document.getElementById('structureChart').parentNode.innerHTML = '<div class="p-4 text-center text-gray-500">没有建筑资产数据</div>';
                }
                
                // 处理历史趋势数据
                if (history && Object.keys(history).length > 0) {
                    try {
                        const historyData = prepareHistoryData();
                        console.log('历史趋势数据准备完成:', historyData);
                        
                        // 创建总资产趋势图
                        if (historyData.totalTrend.length > 0) {
                            try {
                                createTotalTrendChart(historyData.totalTrend);
                                console.log('总资产趋势图创建完成');
                            } catch (error) {
                                console.error('创建总资产趋势图时出错:', error);
                                document.getElementById('totalTrendChart').parentNode.innerHTML = '<div class="p-4 text-center text-gray-500">无法创建总资产趋势图</div>';
                            }
                        } else {
                            document.getElementById('totalTrendChart').parentNode.innerHTML = '<div class="p-4 text-center text-gray-500">没有足够的历史数据创建趋势图</div>';
                        }
                        
                        // 创建分类资产趋势图
                        if (Object.keys(historyData.classifyTrend).length > 0) {
                            try {
                                createClassifyTrendChart(historyData.classifyTrend);
                                console.log('分类资产趋势图创建完成');
                            } catch (error) {
                                console.error('创建分类资产趋势图时出错:', error);
                                document.getElementById('classifyTrendChart').parentNode.innerHTML = '<div class="p-4 text-center text-gray-500">无法创建分类资产趋势图</div>';
                            }
                        } else {
                            document.getElementById('classifyTrendChart').parentNode.innerHTML = '<div class="p-4 text-center text-gray-500">没有足够的历史数据创建趋势图</div>';
                        }
                        
                        // 创建建筑资产趋势图
                        if (Object.keys(historyData.structureTrend).length > 0) {
                            try {
                                createStructureTrendChart(historyData.structureTrend);
                                console.log('建筑资产趋势图创建完成');
                            } catch (error) {
                                console.error('创建建筑资产趋势图时出错:', error);
                                document.getElementById('structureTrendChart').parentNode.innerHTML = '<div class="p-4 text-center text-gray-500">无法创建建筑资产趋势图</div>';
                            }
                        } else {
                            document.getElementById('structureTrendChart').parentNode.innerHTML = '<div class="p-4 text-center text-gray-500">没有足够的历史数据创建趋势图</div>';
                        }
                    } catch (error) {
                        console.error('处理历史趋势数据时出错:', error);
                        document.querySelectorAll('.chart-container').forEach(container => {
                            if (container.id.includes('Trend')) {
                                container.innerHTML = '<div class="p-4 text-center text-gray-500">处理历史数据时出错</div>';
                            }
                        });
                    }
                } else {
                    console.warn('没有历史数据');
                    document.querySelectorAll('.chart-container').forEach(container => {
                        if (container.id.includes('Trend')) {
                            container.innerHTML = '<div class="p-4 text-center text-gray-500">没有历史数据</div>';
                        }
                    });
                }
            } catch (error) {
                console.error('初始化过程中发生错误:', error);
                document.body.innerHTML += '<div class="p-8 text-center"><h2 class="text-xl text-red-600">页面初始化错误</h2><p>' + error.message + '</p></div>';
            }
        }
        
        // 页面加载完成后执行初始化
        document.addEventListener('DOMContentLoaded', initPage);
        console.log('DOM内容加载事件监听器已添加');
    </script>
</body>
</html>